variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/renovate:$CI_COMMIT_REF_SLUG

workflow:
  rules:
    # For merge requests, create a pipeline.
    - if: "$CI_MERGE_REQUEST_IID"
    # For `master` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"

stages:
  - test
  - build-image
  - run

.build-image:
  tags:
    - gitlab-org-docker
  resource_group: $CI_COMMIT_REF_SLUG
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  services:
    - docker:stable-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - |
      if docker manifest inspect $DOCKER_IMAGE >/dev/null; then
        echo "Image already exists"
        docker pull $DOCKER_IMAGE
        label=$(docker inspect --format='{{.Config.Labels.commitRef}}' $DOCKER_IMAGE)
        if [ "$label" == "$CI_COMMIT_SHORT_SHA" ]; then
          echo "Image has correct ref, so we skip building"
          exit 0
        fi
      fi
      echo "Building image"
      docker build . --tag "$DOCKER_IMAGE" --label commitRef=$CI_COMMIT_SHORT_SHA
      echo "Pushing image"
      docker push "$DOCKER_IMAGE"

#include:
#  - project: gitlab-org/frontend/untamper-my-lockfile
#    file: .gitlab-ci-template.yml
#
#untamper-my-lockfile:
#  rules:
#    - if: '$CI_PIPELINE_SOURCE != "schedule"'
#      changes:
#        - yarn.lock

build-image:
  extends: .build-image
  stage: build-image
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule"'

build-image-manual:
  extends: .build-image
  stage: run
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: manual

beep-boop:
  image: $DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  stage: run
  resource_group: $CI_COMMIT_REF_SLUG
  tags:
    - gitlab-org
  script:
    - cd /workdir/
    - ./run-renovate.sh
    - cp -r /workdir/renovate-log.txt $CI_PROJECT_DIR/renovate-log.txt
  artifacts:
    paths:
      - renovate-log.txt
    expire_in: 1 week
    public: false
    when: always
